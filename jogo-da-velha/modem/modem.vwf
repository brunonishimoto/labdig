/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("__modem_transmissao:TX|Eatual")
{
	VALUES = "Undefined", "Eatual.inicial_tx", "Eatual.espera_rts", "Eatual.ativa_tempo_cts", "Eatual.espera_tempo_cts", "Eatual.ativa_cts", "Eatual.em_transmissao";
}

SIGNAL("CD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CTS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RTS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 714")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 1377")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 1796")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("modem_transmissao:TX|Eatual")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "__modem_transmissao:TX|Eatual";
}

SIGNAL("modem_recepcao:RX|Eatual")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("CD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 4560.0;
		LEVEL 1 FOR 1900.0;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("CTS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 660.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 7580.0;
	}
}

TRANSITION_LIST("DTR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 220.0;
		LEVEL 0 FOR 1660.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 4560.0;
		LEVEL 1 FOR 1920.0;
	}
}

TRANSITION_LIST("RC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 2880.0;
	}
}

TRANSITION_LIST("RD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3600.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 2880.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 9920.0;
	}
}

TRANSITION_LIST("RTS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 2200.0;
		LEVEL 1 FOR 7600.0;
	}
}

TRANSITION_LIST("TC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 1220.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 7660.0;
	}
}

TRANSITION_LIST("TD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 7660.0;
	}
}

TRANSITION_LIST("modem_transmissao:TX|Eatual")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Eatual.inicial_tx FOR 180.0;
		LEVEL Eatual.espera_rts FOR 40.0;
		LEVEL Eatual.ativa_tempo_cts FOR 40.0;
		LEVEL Eatual.espera_tempo_cts FOR 400.0;
		LEVEL Eatual.ativa_cts FOR 40.0;
		LEVEL Eatual.em_transmissao FOR 480.0;
		LEVEL Eatual.inicial_tx FOR 240.0;
		LEVEL Eatual.espera_rts FOR 40.0;
		LEVEL Eatual.ativa_tempo_cts FOR 40.0;
		LEVEL Eatual.espera_tempo_cts FOR 400.0;
		LEVEL Eatual.ativa_cts FOR 40.0;
		LEVEL Eatual.em_transmissao FOR 480.0;
		LEVEL Eatual.espera_rts FOR 640.0;
		LEVEL Eatual.inicial_tx FOR 480.0;
		LEVEL Eatual.espera_rts FOR 4560.0;
		LEVEL Eatual.inicial_tx FOR 1900.0;
	}
}

TRANSITION_LIST("modem_recepcao:RX|Eatual")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1640.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 4560.0;
		LEVEL 0 FOR 1900.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 714";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "DTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 1377";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "RTS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CTS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 1796";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "CD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modem_transmissao:TX|Eatual";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "modem_recepcao:RX|Eatual";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 140000;
	MASTER = TRUE;
}
;
